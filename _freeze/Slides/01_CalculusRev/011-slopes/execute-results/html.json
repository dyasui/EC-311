{
  "hash": "147ba91b534a4c72136991b46413f08f",
  "result": {
    "engine": "knitr",
    "markdown": "---\nname: calculus\n---\n\n\n\n## Starting Simple\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\n# Create data for the line\nx <- c(0, 2, 4, 6, 8)\ny <- x * (1/2) + 5\n\nline_data <- data.frame(x, y)\n\n# Create the line plot\nline_plot <- ggplot(line_data, aes(x, y)) +\n  geom_line(color= \"#b45c20\", lwd = 2) +\n  labs(x = \"X\", y = \"Y\") +\n  theme_minimal()\n\nprint(line_plot)\n```\n\n::: {.cell-output-display}\n![](011-slopes_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n\n\n\nWe call the slope the [RISE]{.hi} over [RUN]{.hi} \n\n---\n\n## Functions & Slopes\n\nWe can write that previous line as a mathematical function:\n\n$$f(x) =  \\dfrac{x}{2} + 5$$\n\nImportantly, the slope for this function is [$1/2$]{.hi} [everywhere]{.hii}\n\n. . .\n\n- Everywhere means for [all values of $x$]{.hii}\n\n- So no matter at what point of the line we calculate the slope, we will always find it to be [$1/2$]{.hi}\n\n---\n\n## Functions & Slopes\n\nSlopes can take positive, negative, or zero values\n\nAnd each of these let's us know how the function is behaving as we increse in $x$ (as we move to the right):\n\n- Positive values mean the function is increasing\n\n- Negative values mean the function is decreasing\n\n- Zero values mean the function is staying constant (neither increasing or decreasing)\n\n---\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\n# Create x values\nx <- seq(0, 5, by = 0.5)\n\n# Calculate y values for each line\ny_positive_slope <- 0.5 * x + 2\ny_negative_slope <- -0.5 * x + 5\ny_zero_slope <- rep(3, length(x))\n\n# Create a data frame\nline_data <- data.frame(x, y_positive_slope, y_negative_slope, y_zero_slope)\n\n# Create the line plot\nline_plot <- ggplot(line_data, aes(x)) +\n  geom_line(aes(y = y_positive_slope), color = \"blue\", linetype = \"solid\", size = 1) +\n  geom_line(aes(y = y_negative_slope), color = \"red\", linetype = \"solid\", size = 1) +\n  geom_line(aes(y = y_zero_slope), color = \"green\", linetype = \"solid\", size = 1) +\n  labs(x = \"X\", y = \"Y\") +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nâ„¹ Please use `linewidth` instead.\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(line_plot)\n```\n\n::: {.cell-output-display}\n![](011-slopes_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\n---\n\n## Functions & Slopes {.smaller}\n\nThe previous functions are called linear functions:\n\n- Slopes are constant at all values of $x$\n- They are behaving in an equal manner at all points\n\n. . .\n\n<br>\n\nWe will mostly be working with non-linear functions, which simply mean they have some form of curvature\n\n- We will use quadratic and cubic functions\n\n    - Quadratic: $f(x) = 3x^{2} + 5x + 10$\n\n    - Cubic: $f(x) = x^{3} - 2x^{2} + x - 5$\n\n. . .\n\nWhat we truly care about is their slope. And there is a simpler way to find the slope of a function.",
    "supporting": [
      "011-slopes_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}